! C++, 파이썬 포인터 추가 공부

# 선택 삽입 퀵 계수 중 주로 사용하는 것은 퀵 (평균 NlogN, 최악 N^2)

# 표준 정렬 라이브러리의 경우 삽입 + 병합의 팀 소트 사용

팀 소트
# 전체 순서
1. run >= 32 중 일단 처음부터 정렬된 값들을 run으로
2. 경향성이 사라지면 그때부터 삽입 정렬로 run 형성
3. run 생성 완료 후 stack을 하나 만들고 특정 조건을 만족시키도록 merge하며 run 입력
4. 특정 조건은 run을 피보나치로 stack시키고 가장 밑바닥은 황금률의 k승
5. 따라서 스택의 개수(k)는 최대 logn을 만족

# 최적화
insert / 이진탐색 > tc nlog
merge
- temp를 작은 배열로 복사하고 작은원래 배열은 값을 덮어씀
(처리속도를 위해 immutable을 일부 포기함)
- AB 최소최대 비교 후 사이값만 비교
- 이진탐색 대신 갤로핑(2^k sort) 사용

